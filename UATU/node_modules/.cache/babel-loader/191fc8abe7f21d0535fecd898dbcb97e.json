{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jessica\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\Code-Louisville-REACT-2018\\\\UATU\\\\src\\\\searchUI.js\";\nimport React, { Component } from 'react';\nimport ProfileUI from './profile.js';\nimport ComicList from './comicList.js';\nimport SearchListItem from './searchlistitem'; // import utility from './utility.js';\n\nimport './flexbox.css';\nimport './specky.css';\n\nvar SearchUI =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchUI, _Component);\n\n  function SearchUI() {\n    var _this;\n\n    _classCallCheck(this, SearchUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchUI).call(this));\n    _this.state = {\n      character: '',\n      profileSource: '',\n      characterName: '',\n      biography: ''\n    };\n    _this.handleSearchInput = _this.handleSearchInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchUI, [{\n    key: \"handleSearchInput\",\n    value: function handleSearchInput(event) {\n      this.setState({\n        character: event.target.value\n      });\n    }\n  }, {\n    key: \"publicKey\",\n    value: function publicKey() {\n      return '5ef86689af1d8abd822d2eeb00844eda';\n    }\n  }, {\n    key: \"appendParam\",\n    value: function appendParam(uriString, paramName, paramValue) {\n      if (uriString.includes('?')) {\n        return uriString + '&' + paramName + '=' + encodeURI(paramValue);\n      } else {\n        return uriString + '?' + paramName + '=' + encodeURI(paramValue);\n      }\n    }\n  }, {\n    key: \"urlWithPublicKey\",\n    value: function urlWithPublicKey(uriString) {\n      uriString = this.appendParam(uriString, 'apikey', this.publicKey());\n      return uriString;\n    }\n  }, {\n    key: \"search\",\n    value: function search(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var uri = 'https://gateway.marvel.com:443/v1/public/characters?';\n      uri = this.appendParam(uri, 'nameStartsWith', this.state.character);\n      uri = this.urlWithPublicKey(uri);\n      fetch(uri).then(function (result) {\n        return result.json();\n      }).then(function (data) {\n        _this2.setState({\n          characterName: data.data.results[0].name\n        });\n\n        _this2.setState({\n          profileSource: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension\n        });\n\n        _this2.setState({\n          biography: data.data.results[0].description\n        });\n\n        var test = _this2.getComics;\n        var charResultUI = data.data.results.map(function callback(character) {\n          return React.createElement(SearchListItem, {\n            id: character.id,\n            img: character.thumbnail.path + '.' + character.thumbnail.extension,\n            click: test,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          });\n        });\n\n        _this2.setState({\n          heroes: charResultUI\n        });\n      });\n    } // take the Character ID returned from the results array and store it --done\n    // create a button that runs the second fetch call, to display comics based off of the Id\n    // return the comics listed to the Comic list element\n\n  }, {\n    key: \"getComics\",\n    value: function getComics(id) {\n      var _this3 = this;\n\n      var utility = require('./utility.js');\n\n      var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + id + '/comics';\n      uri = utility.appendParam(uri, 'format', 'comic');\n      uri = utility.appendParam(uri, 'formatType', 'comic');\n      uri = utility.appendParam(uri, 'limit', 3);\n      uri = utility.urlWithPublicKey(uri);\n      fetch(uri).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        var comiclistUI = data.data.results.map(function callback(comic) {\n          return React.createElement(ComicList, {\n            title: comic.title,\n            date: comic.dates[0].date // creators={comic.creators.items[0].name}\n            ,\n            cover: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          });\n        });\n\n        _this3.setState({\n          comiclistUI: comiclistUI\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-wrapper cf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search here...\",\n        required: true,\n        value: this.state.character,\n        onChange: this.handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"ul\", {\n        className: \"heroes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.heroes), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ComicList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchUI;\n}(Component);\n\nexport default SearchUI;","map":{"version":3,"sources":["C:\\Users\\Jessica\\Desktop\\Code Louisville\\Code-Louisville-REACT-2018\\Code-Louisville-REACT-2018\\UATU\\src\\searchUI.js"],"names":["React","Component","ProfileUI","ComicList","SearchListItem","SearchUI","state","character","profileSource","characterName","biography","handleSearchInput","bind","search","event","setState","target","value","uriString","paramName","paramValue","includes","encodeURI","appendParam","publicKey","preventDefault","uri","urlWithPublicKey","fetch","then","result","json","data","results","name","thumbnail","path","extension","description","test","getComics","charResultUI","map","callback","id","heroes","utility","require","comiclistUI","comic","title","dates","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ProfileUI from './profile.js';\nimport ComicList from './comicList.js';\nimport SearchListItem from './searchlistitem';\n// import utility from './utility.js';\nimport './flexbox.css';\nimport './specky.css';\n\nclass SearchUI extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            character: '',\n            profileSource: '',\n            characterName: '',\n            biography: ''\n        };\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.search = this.search.bind(this);\n    }\n\n    handleSearchInput(event) {\n        this.setState({\n            character: event.target.value\n        });\n    };\n    publicKey() {\n        return '5ef86689af1d8abd822d2eeb00844eda'\n    };\n\n    appendParam(uriString, paramName, paramValue) {\n        if (uriString.includes('?')) {\n            return uriString + '&' + paramName + '=' + encodeURI(paramValue);\n        } else {\n            return uriString + '?' + paramName + '=' + encodeURI(paramValue);\n        }\n    };\n\n    urlWithPublicKey(uriString) {\n        uriString = this.appendParam(uriString, 'apikey', this.publicKey());\n        return uriString;\n    };\n\n\n\n    search(event) {\n        event.preventDefault();\n        var uri = 'https://gateway.marvel.com:443/v1/public/characters?'\n        uri = this.appendParam(uri, 'nameStartsWith', this.state.character);\n        uri = this.urlWithPublicKey(uri);\n        fetch(uri).then(result => { return result.json() }).then(data => {\n            this.setState({ characterName: data.data.results[0].name })\n            this.setState({ profileSource: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension })\n            this.setState({ biography: data.data.results[0].description })\n            var test = this.getComics;\n            var charResultUI = data.data.results.map(function callback(character) {\n                return (\n                    <SearchListItem\n                        id={character.id}\n                        img={character.thumbnail.path + '.' + character.thumbnail.extension}\n                        click={test}\n\n                    />\n                )\n            });\n            this.setState({ heroes: charResultUI })\n        });\n    }\n\n    // take the Character ID returned from the results array and store it --done\n    // create a button that runs the second fetch call, to display comics based off of the Id\n    // return the comics listed to the Comic list element\n\n\n\n    getComics(id) {\n        var utility = require('./utility.js')\n        var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + id + '/comics'\n        uri = utility.appendParam(uri, 'format', 'comic');\n        uri = utility.appendParam(uri, 'formatType', 'comic');\n        uri = utility.appendParam(uri, 'limit', 3);\n        uri = utility.urlWithPublicKey(uri);\n        fetch(uri).then(data => { return data.json() }).then(data => {\n            var comiclistUI = data.data.results.map(function callback(comic) {\n                return (\n                    <ComicList\n                        title={comic.title}\n                        date={comic.dates[0].date}\n                        // creators={comic.creators.items[0].name}\n                        cover={comic.thumbnail.path + '.' + comic.thumbnail.extension}\n                    />\n                );\n            })\n            this.setState({ comiclistUI: comiclistUI })\n        }\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form className=\"form-wrapper cf\">\n                    <input type=\"text\" placeholder=\"Search here...\" required value={this.state.character} onChange={this.handleSearchInput} />\n                    <button type=\"submit\" onClick={this.search}>Search</button>\n                </form>\n                <ul className=\"heroes\">\n                    {this.state.heroes}\n                </ul>\n                {/* <ProfileUI\n                        name={this.state.characterName}\n                        biography={this.state.biography}\n                        profileSource={this.state.profileSource}\n                    /> */}\n                <ul>\n                    <ComicList />\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default SearchUI;"]},"metadata":{},"sourceType":"module"}