{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\src\\\\profile.js\";\nimport React, { Component } from 'react';\nimport ComicList from './comicList.js';\nimport { withRouter } from 'react-router-dom';\nimport './flexbox.css';\n\nvar ProfileUI =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileUI, _Component);\n\n  function ProfileUI(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileUI).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      comiclistUI: []\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProfileUI, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(event) {\n      this.getCharacter();\n      this.getComics();\n    }\n  }, {\n    key: \"getCharacter\",\n    value: function getCharacter() {\n      var _this2 = this;\n\n      var utility = require('./utility.js');\n\n      var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + this.state.id;\n      uri = utility.urlWithPublicKey(uri);\n      fetch(uri).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        _this2.setState({\n          name: data.data.results[0].name\n        });\n\n        _this2.setState({\n          biography: data.data.results[0].description\n        });\n\n        _this2.setState({\n          profileSource: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension\n        });\n      });\n    }\n  }, {\n    key: \"getComics\",\n    value: function getComics() {\n      var _this3 = this;\n\n      var utility = require('./utility.js');\n\n      var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + this.state.id + '/comics';\n      uri = utility.appendParam(uri, 'format', 'comic');\n      uri = utility.appendParam(uri, 'formatType', 'comic');\n      uri = utility.appendParam(uri, 'limit', 3);\n      uri = utility.urlWithPublicKey(uri);\n      var seriesClick = this.handleClick;\n      var id = this.state.id;\n      fetch(uri).then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        var comiclistUI = data.data.results.map(function callback(comic) {\n          var creatorName = '';\n          var date = new Date(comic.dates[0].date);\n\n          if (comic.creators.available > 0) {\n            creatorName = comic.creators.items[0].name;\n          }\n\n          return React.createElement(ComicList, {\n            id: id,\n            title: comic.title,\n            date: date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear(),\n            creators: creatorName,\n            cover: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            click: seriesClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        });\n\n        _this3.setState({\n          comiclistUI: comiclistUI\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      this.props.history.push('/series/' + id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item1\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img\",\n        src: this.state.profileSource,\n        alt: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), this.state.biography), React.createElement(\"div\", {\n        className: \"item2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.comiclistUI));\n    }\n  }]);\n\n  return ProfileUI;\n}(Component);\n\nexport default withRouter(ProfileUI);","map":{"version":3,"sources":["C:\\Users\\Cory\\Desktop\\Code Louisville\\Code-Louisville-REACT-2018\\UATU\\src\\profile.js"],"names":["React","Component","ComicList","withRouter","ProfileUI","props","state","id","match","params","comiclistUI","handleClick","bind","event","getCharacter","getComics","utility","require","uri","urlWithPublicKey","fetch","then","data","json","setState","name","results","biography","description","profileSource","thumbnail","path","extension","appendParam","seriesClick","map","callback","comic","creatorName","date","Date","dates","creators","available","items","title","getMonth","getDate","getFullYear","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ComicList from './comicList.js'\r\nimport { withRouter } from 'react-router-dom';\r\nimport './flexbox.css';\r\n\r\nclass ProfileUI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            comiclistUI: []\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(event) {\r\n        this.getCharacter();\r\n        this.getComics();\r\n    }\r\n\r\n    getCharacter() {\r\n        var utility = require('./utility.js')\r\n        var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + this.state.id\r\n        uri = utility.urlWithPublicKey(uri);\r\n        fetch(uri).then(\r\n            data => { return data.json() }\r\n        ).then(data => {\r\n            this.setState({ name: data.data.results[0].name })\r\n            this.setState({ biography: data.data.results[0].description })\r\n            this.setState({ profileSource: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension })\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n    getComics() {\r\n        var utility = require('./utility.js')\r\n        var uri = 'https://gateway.marvel.com:443/v1/public/characters/' + this.state.id + '/comics'\r\n        uri = utility.appendParam(uri, 'format', 'comic');\r\n        uri = utility.appendParam(uri, 'formatType', 'comic');\r\n        uri = utility.appendParam(uri, 'limit', 3);\r\n        uri = utility.urlWithPublicKey(uri);\r\n\r\n        var seriesClick = this.handleClick;\r\n        var id = this.state.id;\r\n\r\n        fetch(uri).then(data => { return data.json() }).then(data => {\r\n            var comiclistUI = data.data.results.map(function callback(comic) {\r\n                var creatorName = '';\r\n                var date = new Date(comic.dates[0].date)\r\n                if (comic.creators.available > 0) { creatorName = comic.creators.items[0].name }\r\n                return (\r\n                    <ComicList\r\n                        id={id}\r\n                        title={comic.title}\r\n                        date={(date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear()}\r\n                        creators={creatorName}\r\n                        cover={comic.thumbnail.path + '.' + comic.thumbnail.extension}\r\n                        click={seriesClick}\r\n                    />\r\n                );\r\n            })\r\n            this.setState({ comiclistUI: comiclistUI })\r\n        });\r\n    };\r\n\r\n    handleClick(id) {\r\n        this.props.history.push('/series/' + id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile\" >\r\n                <div className='item1' align='center'>\r\n                    <img className=\"img\" src={this.state.profileSource} alt={this.state.name}></img>\r\n                    <h1>{this.state.name}</h1>\r\n                    <br></br>\r\n                    {this.state.biography}\r\n                </div>\r\n                <div className='item2'>\r\n                    {this.state.comiclistUI}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(ProfileUI);"]},"metadata":{},"sourceType":"module"}