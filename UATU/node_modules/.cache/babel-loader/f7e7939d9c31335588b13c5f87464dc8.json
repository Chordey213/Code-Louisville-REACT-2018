{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cory\\\\Desktop\\\\Code Louisville\\\\Code-Louisville-REACT-2018\\\\UATU\\\\src\\\\searchUI.js\";\nimport React, { Component } from 'react';\nimport SearchListItem from './searchlistitem';\nimport { withRouter } from 'react-router-dom';\nimport './flexbox.css';\nimport './specky.css';\n\nvar SearchUI =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchUI, _Component);\n\n  function SearchUI(props) {\n    var _this;\n\n    _classCallCheck(this, SearchUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchUI).call(this, props));\n    _this.state = {\n      character: _this.props.match.params.name,\n      profileSource: '',\n      characterName: '',\n      biography: ''\n    };\n    _this.handleSearchInput = _this.handleSearchInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchUI, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(event) {\n      this.getCharSearch();\n    }\n  }, {\n    key: \"handleSearchInput\",\n    value: function handleSearchInput(event) {\n      this.setState({\n        character: event.target.value\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(event) {\n      this.props.history.push('/search/' + this.state.character);\n    }\n  }, {\n    key: \"notFound\",\n    value: function notFound() {\n      return React.createElement(\"h1\", {\n        className: \"shit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"'Sorry, No matches found'\");\n    }\n  }, {\n    key: \"getCharSearch\",\n\n    /* returns a list of characters based off of the search input */\n    value: function getCharSearch() {\n      var _this2 = this;\n\n      var utility = require('./utility.js');\n\n      var uri = 'https://gateway.marvel.com:443/v1/public/characters?';\n      uri = utility.appendParam(uri, 'nameStartsWith', this.state.character);\n      uri = utility.urlWithPublicKey(uri);\n      fetch(uri).then(function (result) {\n        return result.json();\n      }).then(function (data) {\n        var test = _this2.handleClick;\n\n        if (data.data.count > 0) {\n          var charResultUI = data.data.results.map(function callback(character) {\n            return React.createElement(SearchListItem, {\n              id: character.id,\n              name: character.name,\n              img: character.thumbnail.path + '.' + character.thumbnail.extension,\n              click: test,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            });\n          });\n\n          _this2.setState({\n            heroes: charResultUI\n          });\n        } else {\n          _this2.setState({\n            heroes: _this2.notFound\n          });\n        }\n      });\n    } // take the Character ID returned from the results array and store it --done\n    // create a button that runs the second fetch call, to display comics based off of the Id\n    // return the comics listed to the Comic list element\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      this.props.history.push('/profile/' + id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"legal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Data provided by Marvel. \\xA9 2018 Marvel \"), React.createElement(\"form\", {\n        className: \"form-wrapper cf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search here...\",\n        required: true,\n        value: this.state.character,\n        onChange: this.handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"ul\", {\n        className: \"heroes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Returns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.heroes)));\n    }\n  }]);\n\n  return SearchUI;\n}(Component);\n\nexport default withRouter(SearchUI);","map":{"version":3,"sources":["C:\\Users\\Cory\\Desktop\\Code Louisville\\Code-Louisville-REACT-2018\\UATU\\src\\searchUI.js"],"names":["React","Component","SearchListItem","withRouter","SearchUI","props","state","character","match","params","name","profileSource","characterName","biography","handleSearchInput","bind","search","handleClick","event","getCharSearch","setState","target","value","history","push","utility","require","uri","appendParam","urlWithPublicKey","fetch","then","result","json","data","test","count","charResultUI","results","map","callback","id","thumbnail","path","extension","heroes","notFound"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SearchListItem from './searchlistitem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './flexbox.css';\r\nimport './specky.css';\r\n\r\nclass SearchUI extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            character: this.props.match.params.name,\r\n            profileSource: '',\r\n            characterName: '',\r\n            biography: ''\r\n        };\r\n        this.handleSearchInput = this.handleSearchInput.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount(event) {\r\n        this.getCharSearch();\r\n    };\r\n\r\n    handleSearchInput(event) {\r\n        this.setState({\r\n            character: event.target.value\r\n        });\r\n    };\r\n\r\n    search(event) {\r\n        this.props.history.push('/search/' + this.state.character);\r\n    };\r\n\r\n    notFound() {\r\n        return (\r\n            <h1 className='shit'>'Sorry, No matches found'</h1>\r\n        )\r\n    };\r\n\r\n    /* returns a list of characters based off of the search input */\r\n    getCharSearch() {\r\n        var utility = require('./utility.js')\r\n        var uri = 'https://gateway.marvel.com:443/v1/public/characters?'\r\n        uri = utility.appendParam(uri, 'nameStartsWith', this.state.character);\r\n        uri = utility.urlWithPublicKey(uri);\r\n        fetch(uri).then(result => { return result.json() }).then(data => {\r\n            var test = this.handleClick;\r\n            if(data.data.count > 0) {\r\n            var charResultUI = data.data.results.map(function callback(character) {\r\n                return (\r\n                    <SearchListItem\r\n                        id={character.id}\r\n                        name={character.name}\r\n                        img={character.thumbnail.path + '.' + character.thumbnail.extension}\r\n                        click={test}\r\n                    />\r\n                )\r\n            });\r\n            this.setState({ heroes: charResultUI })\r\n        } else {\r\n           this.setState({heroes : this.notFound  })\r\n        }\r\n        });\r\n    }\r\n\r\n    // take the Character ID returned from the results array and store it --done\r\n    // create a button that runs the second fetch call, to display comics based off of the Id\r\n    // return the comics listed to the Comic list element\r\n\r\n    handleClick(id) {\r\n        this.props.history.push('/profile/' + id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='searchBar'>\r\n                <div className='legal' >Data provided by Marvel. © 2018 Marvel </div>\r\n                <form className=\"form-wrapper cf\">\r\n                    <input type=\"text\" placeholder=\"Search here...\" required value={this.state.character} onChange={this.handleSearchInput} />\r\n                    <button type=\"submit\" onClick={this.search}>Search</button>\r\n                </form>\r\n                <ul className=\"heroes\">\r\n                <div className='Returns'>{this.state.heroes}</div>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchUI);"]},"metadata":{},"sourceType":"module"}